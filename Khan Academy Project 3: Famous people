
/**In this project, you’re going to make your own table with some small 
set of “famous people”, then make more tables about things they do and join 
those to create nice human readable lists. Contains at least two tables with at 
least 15 rows total. One of the tables contains a column that relates to the primary key of another table.
Has at least one query that does a JOIN.*/


/* Create table about the people and what they do here */
CREATE TABLE singers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fullname TEXT,
    age INTEGER,
    awards TEXT);
    
INSERT INTO singers (fullname, age, awards) VALUES ("JB", 24, "MTV");
INSERT INTO singers (fullname, age, awards) VALUES ("JHK", 62, "US");
INSERT INTO singers (fullname, age, awards) VALUES ("Jesstine", 27, "Cecelilai");
INSERT INTO singers (fullname, age, awards) VALUES ("Heyliluly", 18, "Billboard");
INSERT INTO singers (fullname, age, awards) VALUES ("Mark Tuan", 33, "MAMA");

CREATE TABLE singers_popularity (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    net_worth INTEGER,
    labels TEXT,
    source_wealth TEXT);
    
INSERT INTO singers_popularity (net_worth,labels, source_wealth) VALUES ( "112 billion", "Hi", "real estae");
INSERT INTO singers_popularity (net_worth,labels, source_wealth) VALUES ("90 billion", "Brother Ent", "investment");
INSERT INTO singers_popularity (net_worth, labels, source_wealth) VALUES ("84 billion", "Chrissy Ent", "gameshow");
INSERT INTO singers_popularity (net_worth, labels, source_wealth) VALUES ("72 billion", "X_L", "brands endorsement/ fashion");
INSERT INTO singers_popularity (net_worth, labels, source_wealth) VALUES ("71 billion", "Lvy", "modelling, acting");

SELECT singers.fullname, singers_popularity.net_worth
FROM singers
JOIN singers_popularity
ON singers.id = singers_popularity.id;



 
